<!-- Botón de sandwich para móviles -->
<button class="navbar-toggler d-block d-md-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar">
  <span class="navbar-toggler-icon"></span>
</button>

<!-- Offcanvas (menú deslizable para móviles) -->
<div class="offcanvas offcanvas-start bg-dark text-white" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="offcanvasNavbarLabel">MiDashBoard</h5>
    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
    <ul class="nav flex-column">
      <li class="nav-item">
        <a class="nav-link text-white" href="/">Inicio</a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white" href="/board">Board</a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white" href="/agregar-receta">Agregar Receta</a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white" href="/agregar-insumos">Agregar Insumo</a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white" href="/gestorDeGastos">gestor de gastos</a>
      </li>
    </ul>
  </div>
</div>

<!-- Barra lateral para pantallas grandes -->
<nav class="sidebar bg-dark text-white d-none d-md-block" style="width: 250px; height: 100vh; position: fixed; top: 0; left: 0; padding: 20px; overflow-y: auto;">
  <h2><a class="nav-link text-white" href="/">MiDashBoard</a></h2>
  <ul class="nav flex-column">
    <li class="nav-item">
      <a class="nav-link text-white" href="/">Inicio</a>
    </li>
    <li class="nav-item">
      <a class="nav-link text-white" href="/board">Board</a>
    </li>
    <li class="nav-item">
      <a class="nav-link text-white" href="/agregar-receta">Agregar Receta</a>
    </li>
    <li class="nav-item">
      <a class="nav-link text-white" href="/agregar-insumos">Agregar Insumo</a>
    </li>
    <li class="nav-item">
      <a class="nav-link text-white" href="/gestorDeGastos">gestor de gastos</a>
    </li>
  </ul>
</nav>

<!-- Navbar para móviles -->
<nav class="navbar navbar-expand-lg navbar-light bg-light d-block d-md-none">
  <div class="container-fluid">
    <!-- Enlace de Iniciar Sesión o Icono de Usuario -->
    <div class="user-section">
      <!-- Enlaces de login/register para móviles -->
      <a class="nav-link-custom login-link" href="#" data-bs-toggle="modal" data-bs-target="#loginModal">Iniciar Sesión</a>
      <a class="nav-link-custom register-link" href="#" data-bs-toggle="modal" data-bs-target="#registerModal">Registrarse</a>
      
      <!-- Icono de usuario para móviles -->
      <div class="user-icon dropdown" style="display: none;">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMobile" role="button" data-bs-toggle="dropdown" aria-expanded="false">
          <i class="bi bi-person-circle">user</i>
        </a>
        <ul class="dropdown-menu" aria-labelledby="navbarDropdownMobile">
          <li><button class="dropdown-item edit-profile-btn">Editar Perfil</button></li>
          <li><button class="dropdown-item delete-profile-btn">Eliminar Perfil</button></li>
          <li><hr class="dropdown-divider" /></li>
          <li><button class="dropdown-item logout-btn">Cerrar Sesión</button></li>
        </ul>
      </div>
    </div>
  </div>
</nav>

<!-- Navbar para pantallas grandes (arriba del contenido) -->
<nav class="navbar navbar-expand-lg navbar-light bg-light d-none d-md-block" style="position: fixed; top: 0; left: 250px; right: 0; z-index: 1000;">
  <div class="container-fluid justify-content-end">
    <!-- Enlaces de login/register para desktop -->
    <div class="user-section" style="margin-right: 150px;">
      <a class="nav-link-custom login-link" href="#" data-bs-toggle="modal" data-bs-target="#loginModal">Iniciar Sesión</a>
      <a class="nav-link-custom register-link" href="#" data-bs-toggle="modal" data-bs-target="#registerModal">Registrarse</a>
      
      <!-- Icono de usuario para desktop -->
      <div class="user-icon dropdown" style="display: none;">
        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownDesktop" role="button" data-bs-toggle="dropdown" aria-expanded="false">
          <i class="bi bi-person-circle">user</i>
        </a>
        <ul class="dropdown-menu" aria-labelledby="navbarDropdownDesktop">
          <li><button class="dropdown-item edit-profile-btn">Editar Perfil</button></li>
          <li><button class="dropdown-item delete-profile-btn">Eliminar Perfil</button></li>
          <li><hr class="dropdown-divider" /></li>
          <li><button class="dropdown-item logout-btn">Cerrar Sesión</button></li>
        </ul>
      </div>
    </div>
  </div>
</nav>

<!-- Modales -->
<!-- Modal de Log-in -->
<div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="loginModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="loginModalLabel">Iniciar Sesión</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="loginForm">
          <div class="mb-3">
            <label for="loginEmail" class="form-label">Email</label>
            <input type="email" class="form-control" id="loginEmail" required />
          </div>
          <div class="mb-3">
            <label for="loginPassword" class="form-label">Contraseña</label>
            <input type="password" class="form-control" id="loginPassword" required />
          </div>
          <div class="error-message login-error" style="display: none;">Correo o contraseña incorrectos.</div>
          <button type="submit" class="btn btn-success">Iniciar Sesión</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Modal de Registro -->
<div class="modal fade" id="registerModal" tabindex="-1" aria-labelledby="registerModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="registerModalLabel">Registrarse</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="registerForm">
          <div class="mb-3">
            <label for="registerName" class="form-label">Nombre</label>
            <input type="text" class="form-control" id="registerName" required />
          </div>
          <div class="mb-3">
            <label for="registerEmail" class="form-label">Email</label>
            <input type="email" class="form-control" id="registerEmail" required />
          </div>
          <div class="mb-3">
            <label for="registerPassword" class="form-label">Contraseña</label>
            <input type="password" class="form-control" id="registerPassword" required />
          </div>
          <div class="error-message register-error" style="display: none;">El correo ya está registrado.</div>
          <button type="submit" class="btn btn-success">Registrarse</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Modal de Perfil -->
<div class="modal fade" id="profileModal" tabindex="-1" aria-labelledby="profileModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="profileModalLabel">Perfil de Usuario</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p><strong>Nombre:</strong> <span class="profile-name"></span></p>
        <p><strong>Email:</strong> <span class="profile-email"></span></p>
        <button class="btn btn-primary edit-profile-btn">Editar Perfil</button>
        <button class="btn btn-danger delete-profile-btn">Borrar Perfil</button>
        <button class="btn btn-warning logout-btn">Cerrar Sesión</button>
      </div>
    </div>
  </div>
</div>

<!-- Estilos personalizados (se mantienen igual) -->
<style>
  /* Tus estilos actuales se mantienen igual */
  .main-content {
    margin-left: 250px;
    padding: 20px;
    transition: margin-left 0.3s ease;
  }
  .sidebar {
    transition: transform 0.3s ease;
  }
  @media (max-width: 767.98px) {
    .main-content {
      margin-left: 0;
    }
    .sidebar {
      transform: translateX(-100%);
    }
    .navbar-toggler {
      display: block !important;
      position: fixed;
      top: 10px;
      left: 10px;
      z-index: 1030;
      background-color: #343a40;
      border: none;
      padding: 8px;
      border-radius: 4px;
    }
    .navbar-toggler-icon {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(255, 255, 255, 0.85)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
    }
    .offcanvas {
      width: 250px !important;
    }
    .navbar {
      margin-left: 0 !important;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      z-index: 1020;
      background-color: #f8f9fa;
      padding: 10px;
    }
    .navbar .container-fluid {
      justify-content: flex-end;
    }
    .navbar .nav-link-custom {
      margin-right: 10px;
    }
    .navbar .dropdown-menu {
      position: absolute;
      right: 0;
      left: auto;
    }
  }
  .nav-link-custom {
    cursor: pointer;
    color: #4caf50;
    text-decoration: none;
  }
  .nav-link-custom:hover {
    text-decoration: underline;
  }
  .user-icon {
    cursor: pointer;
    font-size: 1.5rem;
    margin-left: 10px;
  }
  .error-message {
    color: red;
    font-size: 0.9rem;
    margin-top: 5px;
  }
  .dropdown-menu {
    background-color: #f8f9fa;
    border: 1px solid #ddd;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  .dropdown-item {
    color: #333;
    padding: 8px 16px;
  }
  .dropdown-item:hover {
    background-color: #4caf50;
    color: white;
  }
  .dropdown-divider {
    border-top: 1px solid #ddd;
  }
</style>

<!-- JavaScript actualizado -->
<script>
  let db;
  const dbName = 'UserDB';
  const storeName = 'users';

  // Abrir o crear la base de datos
  const request = indexedDB.open(dbName, 1);

  request.onupgradeneeded = (event) => {
    db = event.target.result;
    if (!db.objectStoreNames.contains(storeName)) {
      db.createObjectStore(storeName, { keyPath: 'email' });
    }
  };

  request.onsuccess = (event) => {
    db = event.target.result;
    checkUserLoggedIn();
    setupEventListeners();
  };

  request.onerror = (event) => {
    console.error('Error al abrir IndexedDB:', event.target.error);
  };

  // Verificar si hay un usuario logueado al cargar la página
  function checkUserLoggedIn() {
    const transaction = db.transaction([storeName], 'readonly');
    const store = transaction.objectStore(storeName);
    const request = store.getAll();

    request.onsuccess = () => {
      if (request.result.length > 0) {
        const user = request.result[0];
        showUserIcon(user);
      } else {
        // No redirigir automáticamente, solo mostrar los enlaces de login/register
        hideUserIcon();
      }
    };

    request.onerror = (event) => {
      console.error('Error al obtener el usuario:', event.target.error);
    };
  }

  // Configurar event listeners
  function setupEventListeners() {
    // Formulario de registro
    document.getElementById('registerForm')?.addEventListener('submit', (e) => {
      e.preventDefault();
      registerUser();
    });

    // Formulario de login
    document.getElementById('loginForm')?.addEventListener('submit', (e) => {
      e.preventDefault();
      loginUser();
    });

    // Botones de perfil
    document.querySelectorAll('.edit-profile-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        alert('Editar perfil: Esta funcionalidad está en desarrollo.');
      });
    });

    document.querySelectorAll('.delete-profile-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        if (confirm('¿Estás seguro de que quieres eliminar tu perfil?')) {
          const email = document.querySelector('.profile-email').textContent;
          deleteUser(email);
        }
      });
    });

    document.querySelectorAll('.logout-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        const email = document.querySelector('.profile-email').textContent;
        deleteUser(email);
      });
    });
  }

  // Mostrar ícono de usuario y ocultar enlaces de Registrarse e Iniciar Sesión
  function showUserIcon(user) {
    const userIcons = document.querySelectorAll('.user-icon');
    const registerLinks = document.querySelectorAll('.register-link');
    const loginLinks = document.querySelectorAll('.login-link');
    const profileNames = document.querySelectorAll('.profile-name');
    const profileEmails = document.querySelectorAll('.profile-email');

    userIcons.forEach(icon => icon.style.display = 'inline-block');
    registerLinks.forEach(link => link.style.display = 'none');
    loginLinks.forEach(link => link.style.display = 'none');
    profileNames.forEach(el => el.textContent = user.name);
    profileEmails.forEach(el => el.textContent = user.email);
  }

  // Ocultar ícono de usuario y mostrar enlaces de login/register
  function hideUserIcon() {
    const userIcons = document.querySelectorAll('.user-icon');
    const registerLinks = document.querySelectorAll('.register-link');
    const loginLinks = document.querySelectorAll('.login-link');

    userIcons.forEach(icon => icon.style.display = 'none');
    registerLinks.forEach(link => link.style.display = 'inline-block');
    loginLinks.forEach(link => link.style.display = 'inline-block');
  }

  // Registrar nuevo usuario
  function registerUser() {
    const name = document.getElementById('registerName').value;
    const email = document.getElementById('registerEmail').value;
    const password = document.getElementById('registerPassword').value;

    const transaction = db.transaction([storeName], 'readwrite');
    const store = transaction.objectStore(storeName);
    const request = store.add({ name, email, password });

    request.onsuccess = () => {
      // Ocultar modal de registro
      const registerModal = bootstrap.Modal.getInstance(document.getElementById('registerModal'));
      registerModal.hide();
      
      // Mostrar icono de usuario
      showUserIcon({ name, email });
      
      // Limpiar formulario
      document.getElementById('registerForm').reset();
    };

    request.onerror = (event) => {
      console.error('Error al registrar usuario:', event.target.error);
      document.querySelector('.register-error').style.display = 'block';
    };
  }

  // Iniciar sesión
  function loginUser() {
    const email = document.getElementById('loginEmail').value;
    const password = document.getElementById('loginPassword').value;

    const transaction = db.transaction([storeName], 'readonly');
    const store = transaction.objectStore(storeName);
    const request = store.get(email);

    request.onsuccess = () => {
      const user = request.result;
      if (user && user.password === password) {
        // Ocultar modal de login
        const loginModal = bootstrap.Modal.getInstance(document.getElementById('loginModal'));
        loginModal.hide();
        
        // Mostrar icono de usuario
        showUserIcon(user);
        
        // Limpiar formulario
        document.getElementById('loginForm').reset();
        document.querySelector('.login-error').style.display = 'none';
      } else {
        document.querySelector('.login-error').style.display = 'block';
      }
    };

    request.onerror = (event) => {
      console.error('Error al iniciar sesión:', event.target.error);
      document.querySelector('.login-error').style.display = 'block';
    };
  }

  // Eliminar usuario de IndexedDB
  function deleteUser(email) {
    const transaction = db.transaction([storeName], 'readwrite');
    const store = transaction.objectStore(storeName);
    const request = store.delete(email);

    request.onsuccess = () => {
      console.log('Usuario eliminado de IndexedDB');
      hideUserIcon();
      alert('Sesión cerrada correctamente.');
      window.location.href = '/landing';
    };

    request.onerror = (event) => {
      console.error('Error al eliminar el usuario:', event.target.error);
    };
  }
</script>